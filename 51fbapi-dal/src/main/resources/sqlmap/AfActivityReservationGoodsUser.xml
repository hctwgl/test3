<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- af_activity_reservation_goods_user表 -->
<mapper namespace="com.ald.fanbei.api.dal.dao.AfActivityReservationGoodsUserDao">
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="queryFields">
        id rid,goods_id,gmt_create,gmt_modified,coupon_id,user_id,goods_count 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="commonCondition">
    	WHERE 0 = 0
        <if test="rid !=null">
            AND id  = #{rid,jdbcType=INTEGER}
        </if>
        <if test="goodsId != null and goodsId != ''">
            AND goods_id = #{goodsId,jdbcType=INTEGER}
        </if>
        <if test="gmtCreate !=null">
            AND gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
        </if>
        <if test="gmtModified !=null">
            AND gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="couponId != null and couponId != ''">
            AND coupon_id = #{couponId,jdbcType=INTEGER}
        </if>
        <if test="userId != null and userId != ''">
            AND user_id = #{userId,jdbcType=INTEGER}
        </if>
        <if test="goodsCount != null and goodsCount != ''">
            AND goods_count = #{goodsCount,jdbcType=INTEGER}
        </if>
    </sql>

    
    <insert id="saveRecord" parameterType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo" keyProperty="rid">
    	<selectKey resultType="java.lang.Long" keyProperty="rid" order="AFTER" >
	      SELECT LAST_INSERT_ID()
	    </selectKey>
    
        INSERT INTO af_activity_reservation_goods_user
        <trim prefix="(" suffix=")" suffixOverrides="," >
	        <if test="goodsId != null">        
	            goods_id,
	        </if>
	        <if test="gmtCreate != null">        
	            gmt_create,
	        </if>
	        <if test="gmtModified != null">        
	            gmt_modified,
	        </if>
	        <if test="couponId != null">        
	            coupon_id,
	        </if>
	        <if test="userId != null">        
	            user_id,
	        </if>
	        <if test="goodsCount != null">        
	            goods_count,
	        </if>
        </trim>
        
        <trim prefix="values (" suffix=")" suffixOverrides="," >
		    <if test="goodsId != null" >
		       #{goodsId,jdbcType=INTEGER},
		    </if>
		    <if test="gmtCreate != null" >
		       #{gmtCreate,jdbcType=TIMESTAMP},
		    </if>
		    <if test="gmtModified != null" >
		       #{gmtModified,jdbcType=TIMESTAMP},
		    </if>
		    <if test="couponId != null" >
		       #{couponId,jdbcType=INTEGER},
		    </if>
		    <if test="userId != null" >
		       #{userId,jdbcType=INTEGER},
		    </if>
		    <if test="goodsCount != null" >
		       #{goodsCount,jdbcType=INTEGER},
		    </if>
        </trim>
    </insert>
    
    <update id="updateById"  parameterType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo">
        UPDATE af_activity_reservation_goods_user
          <set>
            <if test="goodsId != null and goodsId != '' ">        
                goods_id = #{goodsId,jdbcType=INTEGER},                
            </if>
            <if test="gmtCreate != null and gmtCreate != '' ">        
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},                
            </if>
            <if test="gmtModified != null and gmtModified != '' ">        
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},                
            </if>
            <if test="couponId != null and couponId != '' ">        
                coupon_id = #{couponId,jdbcType=INTEGER},                
            </if>
            <if test="userId != null and userId != '' ">        
                user_id = #{userId,jdbcType=INTEGER},                
            </if>
            <if test="goodsCount != null and goodsCount != '' ">        
                goods_count = #{goodsCount,jdbcType=INTEGER}                
            </if>
        </set>    
        WHERE is_delete = 0 AND id = #{rid ,jdbcType=BIGINT}
    </update>

    <update id="updateReservationInfo"  >
        UPDATE af_activity_reservation_goods_user
        <set> gmt_modified = now()
            <if test="type == 1 ">
               , goods_count = goods_count + 1
            </if>
            <if test="type == 2 ">
               , goods_count = goods_count - 1
            </if>

        </set>
        WHERE  goods_id = #{goodsId ,jdbcType=BIGINT} and user_id =  #{userId ,jdbcType=BIGINT}
    </update>

	<select id="getById" resultType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo">
        SELECT
        <include refid="queryFields" />
        FROM af_activity_reservation_goods_user
        WHERE is_delete = 0 AND id=#{rid ,jdbcType=BIGINT}
        LIMIT 0,1
    </select>

	<select id="getByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo" parameterType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo">
        SELECT
        <include refid="queryFields" />
        FROM af_activity_reservation_goods_user
        <include refid="commonCondition"/> 
        limit 0,1
    </select>
               
    <select id="getListByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo" parameterType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo">
        SELECT
        <include refid="queryFields" />
        FROM af_activity_reservation_goods_user
        <include refid="commonCondition"/>
    </select>

    <select id="getActivityReservationGoodsList" resultType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo" >
        SELECT
        aag.id rid,aag.goods_id,aag.gmt_create,aag.gmt_modified,sag.limit_count,aag.coupon_id,aag.sort
        , sa.gmt_start, sa.gmt_end, ag.name goodsName, sag.special_price activityAmount
        , if(MIN(b.actual_amount) > 0, MIN(b.actual_amount), 0)  saleAmount
        , if((MIN(b.actual_amount) - ac.amount + sag.special_price ) > 0, MIN(b.actual_amount) - ac.amount + sag.special_price , 0) end_amount
        , ac.amount couponPrice, agu.id userReservationId, ifnull(agu.goods_count, 0)  goodsCount
        , ag.goods_icon, ag.thumbnail_icon, ag.goods_url
        FROM af_activity_reservation_goods  aag
        left join af_activity_reservation_goods_user agu on agu.goods_id = aag.id and agu.user_id = #{userId,jdbcType=INTEGER}
        and aag.id in (
          select gu.goods_id from af_activity_reservation_goods_user gu where gu.user_id = #{userId,jdbcType=INTEGER}
          )
        left join af_goods ag on ag.id = aag.goods_id
        left join af_goods_price b ON ag.id = b.goods_id and b.is_delete = 0
        left join af_seckill_activity_goods sag on sag.goods_id = aag.goods_id and  sag.is_delete = 0
        left join af_seckill_activity sa on sa.id = sag.activity_id
        left join af_coupon ac on ac.id = aag.coupon_id
        WHERE aag.is_delete = 0
        <if test="goodsId != null and goodsId != '' ">
            and aag.goods_id = #{goodsId,jdbcType=INTEGER}
        </if>
        and sa.id = #{activityId,jdbcType=INTEGER}
        and ag.status = 'PUBLISH'
        and sag.special_price != 0
        GROUP BY aag.goods_id
        order by aag.sort asc
    </select>

    <select id="getUserActivityReservationGoodsList" resultType="com.ald.fanbei.api.dal.domain.AfActivityReservationGoodsUserDo" >
        SELECT
        aag.id rid,aag.goods_id,aag.gmt_create,aag.gmt_modified,sag.limit_count,aag.coupon_id,aag.sort
        , sa.gmt_start, sa.gmt_end, ag.name goodsName, sag.special_price activityAmount
        , if(MIN(b.actual_amount) > 0, MIN(b.actual_amount), 0)  saleAmount
        , if((MIN(b.actual_amount) - ac.amount + sag.special_price) > 0, MIN(b.actual_amount) - ac.amount  + sag.special_price, 0) end_amount
        , ac.amount couponPrice, ifnull(agu.goods_count, 0) goods_count
        , ag.goods_icon, ag.thumbnail_icon, ag.goods_url
        FROM af_activity_reservation_goods  aag
        left join af_activity_reservation_goods_user agu on agu.goods_id = aag.id and agu.user_id = #{userId,jdbcType=INTEGER}
        left join af_goods ag on ag.id = aag.goods_id
        left join af_goods_price b ON ag.id = b.goods_id and b.is_delete = 0
        left join af_seckill_activity_goods sag on sag.goods_id = aag.goods_id and  sag.is_delete = 0
        left join af_seckill_activity sa on sa.id = sag.activity_id
        left join af_coupon ac on ac.id = aag.coupon_id
        WHERE aag.is_delete = 0
        and sa.id = #{activityId,jdbcType=INTEGER}
        and ag.status = 'PUBLISH'
        and sag.special_price != 0
        and aag.id in (
           select gu.goods_id from af_activity_reservation_goods_user gu where gu.user_id = #{userId,jdbcType=INTEGER} and gu.goods_count > 0
        )
        GROUP BY aag.goods_id
        order by aag.sort asc
    </select>

    <select id="getReservationGoodsList" resultType="com.ald.fanbei.api.dal.domain.AfGoodsDo" >
        SELECT g.id rid,ifnull(t.activity_price,g.`sale_amount` ) activity_price,g.*
        FROM af_activity_reservation_goods s
        INNER JOIN af_goods g ON s.goods_id = g.id and g.status = 'PUBLISH'
        LEFT JOIN (SELECT min(a.special_price) 'activity_price',a.goods_id
        FROM`af_seckill_activity_goods` a
        INNER JOIN af_seckill_activity b ON a.activity_id = b.id
         WHERE a.is_delete = 0
         and b.status = 1
         AND b.is_disable = 0
          AND b.is_delete = 0
         	and b.id = #{activityId,jdbcType=INTEGER}
        GROUP BY a.goods_id
        ORDER BY b.gmt_create DESC) t on s.goods_id = t.goods_id
        WHERE
        s.is_delete=0
        and s.gmt_create >= '2018-06-05 15:00:00'
        order by s.sort asc
    </select>
    
</mapper>
