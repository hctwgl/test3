<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- af_de_goods表:双十一砍价模块 -->
<mapper namespace="com.ald.fanbei.api.dal.dao.AfDeGoodsDao">
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="queryFields">
        id rid,gmt_create,gmt_modified,goodspriceid,lowestprice,type 
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="commonCondition">
    	WHERE is_delete = 0
        <if test="rid !=null">
            AND id  = #{rid,jdbcType=INTEGER}
        </if>
        <if test="gmtCreate !=null">
            AND gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
        </if>
        <if test="gmtModified !=null">
            AND gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="goodspriceid != null and goodspriceid != ''">
            AND goodspriceid = #{goodspriceid,jdbcType=INTEGER}
        </if>
        <if test="lowestprice != null and lowestprice != ''">
            AND lowestprice = #{lowestprice,jdbcType=DECIMAL}
        </if>
        <if test="type != null and type != ''">
            AND type = #{type,jdbcType=INTEGER}
        </if>
    </sql>

    
    <insert id="saveRecord" parameterType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo" keyProperty="rid">
    	<selectKey resultType="java.lang.Long" keyProperty="rid" order="AFTER" >
	      SELECT LAST_INSERT_ID()
	    </selectKey>
    
        INSERT INTO af_de_goods
        <trim prefix="(" suffix=")" suffixOverrides="," >
	        <if test="gmtCreate != null">        
	            gmt_create,
	        </if>
	        <if test="gmtModified != null">        
	            gmt_modified,
	        </if>
	        <if test="goodspriceid != null">        
	            goodspriceid,
	        </if>
	        <if test="lowestprice != null">        
	            lowestprice,
	        </if>
	        <if test="type != null">        
	            type,
	        </if>
        </trim>
        
        <trim prefix="values (" suffix=")" suffixOverrides="," >
		    <if test="gmtCreate != null" >
		       #{gmtCreate,jdbcType=TIMESTAMP},
		    </if>
		    <if test="gmtModified != null" >
		       #{gmtModified,jdbcType=TIMESTAMP},
		    </if>
		    <if test="goodspriceid != null" >
		       #{goodspriceid,jdbcType=INTEGER},
		    </if>
		    <if test="lowestprice != null" >
		       #{lowestprice,jdbcType=DECIMAL},
		    </if>
		    <if test="type != null" >
		       #{type,jdbcType=INTEGER},
		    </if>
        </trim>
    </insert>
    
    <update id="updateById"  parameterType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo">
        UPDATE af_de_goods
          <set>
            <if test="gmtCreate != null and gmtCreate != '' ">        
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},                
            </if>
            <if test="gmtModified != null and gmtModified != '' ">        
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},                
            </if>
            <if test="goodspriceid != null and goodspriceid != '' ">        
                goodspriceid = #{goodspriceid,jdbcType=INTEGER},                
            </if>
            <if test="lowestprice != null and lowestprice != '' ">        
                lowestprice = #{lowestprice,jdbcType=DECIMAL},                
            </if>
            <if test="type != null and type != '' ">        
                type = #{type,jdbcType=INTEGER}                
            </if>
        </set>    
        WHERE is_delete = 0 AND id = #{rid ,jdbcType=BIGINT}
    </update>

	<select id="getById" resultType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo">
        SELECT
        <include refid="queryFields" />
        FROM af_de_goods
        WHERE is_delete = 0 AND id=#{rid ,jdbcType=BIGINT}
        LIMIT 0,1
    </select>

	<select id="getByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo" parameterType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo">
        SELECT
        <include refid="queryFields" />
        FROM af_de_goods
        <include refid="commonCondition"/> 
        limit 0,1
    </select>
               
    <select id="getListByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo" parameterType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo">
        SELECT
        <include refid="queryFields" />
        FROM af_de_goods
        <include refid="commonCondition"/>
    </select>
     <select id="getActivityTotalCount" resultType="java.lang.Long">
            SELECT 
          		   cu.cutInfoNum + go.userGoodsNUM  totalCount
            FROM  (SELECT COUNT(0) cutInfoNum FROM af_de_user_cutinfo)
                   AS cu,
                  (SELECT COUNT(0) userGoodsNUM FROM af_de_user_goods )
                   AS go
    </select>
    
    <resultMap type="com.ald.fanbei.api.dal.domain.dto.UserDeGoods" id="userDeGoods">
    	<id column="goodsPriceId" property="goodsPriceId" />
		<result column="image" property="image" />
		<result column="thumbnailIcon" property="thumbnailIcon" />
		<result column="originalPrice" property="originalPrice" />
		<result column="lowestPrice" property="lowestPrice" />
		<result column="cutPrice" property="cutPrice" />
		<result column="type" property="type" />
		<result column="share" property="share" />
		<result column="name" property="name" />
		<result column="goodsId" property="goodsId" />
		<collection property="couponList" ofType="com.ald.fanbei.api.dal.domain.dto.UserDeGoodsCoupon"  column="couponId"  >
			<id column="couponId" property="couponId" />
			<result column="couponName" property="couponName" />
			<result column="threshold" property="threshold" />
			<result column="state" property="state" /> 
		</collection>    
    </resultMap>
     <select id="getGoodsInfo" resultType="com.ald.fanbei.api.dal.domain.dto.AfDeUserGoodsInfoDto" parameterType="com.ald.fanbei.api.dal.domain.AfDeGoodsDo">
       
       SELECT 
       			 goods.image, goods.name
        FROM(
              SELECT
				  p.id AS goodsPriceId,
				  g.goods_icon AS image,
				  p.actual_amount AS originalPrice,
				  d.lowestPrice,
				  IF(u.cutPrice IS NULL,0,u.cutprice) AS cutprice,
				  d.type,
				  IF(u.userId IS NULL, 0,1) AS `share`,
				  g.`name`,
				  g.`goods_detail` AS goods_detail,
				  o.`name` AS couponName,
				  o.id AS couponId,
				  c.threshold AS threshold,
			 	 IF(u.cutCount IS NULL,0, IF( u.cutCount > c.threshold AND uc.id IS NULL, 2, 1)) AS state
			FROM
			    af_goods g
				JOIN af_goods_price p ON g.id = p.goods_id AND p.is_delete = 0 AND g.is_delete = 0
				JOIN af_de_goods d ON p.id = d.goodsPriceId AND d.is_delete = 0
				LEFT JOIN af_de_user_goods u ON u.goodsPriceId = d.goodsPriceId AND u.userId = 0 AND u.is_delete = 0
				LEFT JOIN af_de_goods_coupon c ON d.goodsPriceId = c.goodsPriceId AND c.is_delete = 0
				LEFT JOIN af_coupon o ON c.couponId = o.id AND o.is_delete = 0
				LEFT JOIN af_user_coupon uc ON o.id = uc.coupon_id AND uc.user_id = 0 AND uc.is_delete = 0
        ) goods
        
        RIGHT JOIN af_de_goods ug 
        ON goods.goodsPriceId =  ug.goodsPriceId
        where 
        ug.goodsPriceId = #{goodspriceid}
        AND ug.`is_delete`=0
        LIMIT 0,1
    </select>
    <select id ="getUserDeGoodsList" resultMap="userDeGoods">
	    SELECT
			p.id AS goodsPriceId,
			g.goods_icon AS image,
			g.thumbnail_icon as thumbnailIcon,
			g.id as goodsId,
			p.actual_amount AS originalPrice,
			d.lowestPrice,
			IF(u.cutPrice is null,0,u.cutprice) as cutPrice,
			d.type,
			if(u.userId is null, 0,1) as `share`,
			g.`name`,
			o.`name` as couponName,
			o.id as couponId,
			c.threshold as threshold,
			IF ( c.threshold is null or  c.threshold > u.cutCount or u.cutCount is null,  0,IF (uc.id IS NULL,  2,  1)) AS state
		FROM
			af_goods g
		JOIN af_goods_price p ON g.id = p.goods_id and p.is_delete = 0 and g.is_delete = 0
		JOIN af_de_goods d ON p.id = d.goodsPriceId and d.is_delete = 0
		LEFT JOIN af_de_user_goods u on u.goodsPriceId = d.goodsPriceId and u.userId = #{userId} and u.is_delete = 0
		LEFT JOIN af_de_goods_coupon c on d.goodsPriceId = c.goodsPriceId and c.is_delete = 0
		LEFT JOIN af_coupon o on c.couponId = o.id and o.is_delete = 0
		left join af_user_coupon uc on o.id = uc.coupon_id and uc.user_id = #{userId} and uc.is_delete = 0
		order by goodsPriceId desc,threshold ASC
    </select>
    
</mapper>
