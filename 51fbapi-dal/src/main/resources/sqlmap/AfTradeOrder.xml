<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- af_trade_order表:商圈商户提现记录表模块 -->
<mapper namespace="com.ald.fanbei.api.dal.dao.AfTradeOrderDao">

	<!--基本的sql查询字段 公共引用... -->
	<sql id="queryFields">
		order_id,gmt_modified,business_id,refund_type,status
	</sql>

	<!-- 基本的sql查询条件公共引用 -->
	<sql id="commonCondition">
		WHERE is_delete = 0
		<if test="orderId != null and orderId != ''">
			AND order_id = #{orderId,jdbcType=INTEGER}
		</if>
		<if test="gmtModified !=null">
			AND gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
		</if>
		<if test="businessId != null and businessId != ''">
			AND business_id = #{businessId,jdbcType=INTEGER}
		</if>
		<if test="refundType != null and refundType != ''">
			AND refund_type = #{refundType,jdbcType=VARCHAR}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status,jdbcType=VARCHAR}
		</if>
	</sql>


	<insert id="saveRecord" parameterType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo">
		INSERT INTO af_trade_order
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				order_id,
			</if>
			<if test="gmtModified != null">
				gmt_modified,
			</if>
			<if test="businessId != null">
				business_id,
			</if>
			<if test="refundType != null">
				refund_type,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="balanceAmount != null">
				balance_amount,
			</if>
		</trim>

		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				#{orderId,jdbcType=INTEGER},
			</if>
			<if test="gmtModified != null">
				#{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="businessId != null">
				#{businessId,jdbcType=INTEGER},
			</if>
			<if test="refundType != null">
				#{refundType,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=VARCHAR},
			</if>
			<if test="balanceAmount != null">
				#{balanceAmount},
			</if>
		</trim>
	</insert>

	<update id="updateById" parameterType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo">
		UPDATE af_trade_order
		<set>
			<if test="orderId != null and orderId != '' ">
				order_id = #{orderId,jdbcType=INTEGER},
			</if>
			<if test="gmtModified != null and gmtModified != '' ">
				gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
			</if>
			<if test="businessId != null and businessId != '' ">
				business_id = #{businessId,jdbcType=INTEGER},
			</if>
			<if test="refundType != null and refundType != '' ">
				refund_type = #{refundType,jdbcType=VARCHAR},
			</if>
			<if test="status != null and status != '' ">
				status = #{status,jdbcType=VARCHAR}
			</if>
		</set>
		WHERE is_delete = 0 AND order_id = #{orderId ,jdbcType=BIGINT}
	</update>

	<select id="getById" resultType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo">
		SELECT
		<include refid="queryFields" />
		FROM af_trade_order
		WHERE is_delete = 0 AND order_id=#{id ,jdbcType=BIGINT}
		LIMIT 0,1
	</select>

	<select id="getByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo"
		parameterType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo">
		SELECT
		<include refid="queryFields" />
		FROM af_trade_order
		<include refid="commonCondition" />
		limit 0,1
	</select>

	<select id="getListByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo"
		parameterType="com.ald.fanbei.api.dal.domain.AfTradeOrderDo">
		SELECT
		<include refid="queryFields" />
		FROM af_trade_order
		<include refid="commonCondition" />
	</select>
	<update id="updateStatusByIds">
		update
		af_trade_order set status = #{status} , gmt_modified =now()
		WHERE
		order_id IN
		<foreach collection="items" item="item" index="index"
			separator="," open="(" close=")">
			#{item}
		</foreach>
	</update>
	<select id="getCanWithDrawMoney" resultType="java.math.BigDecimal">
	select sum(b.balance_amount) from af_order a left join af_trade_order b
		on a.id = b.order_id where
		a.status in ('PAID','REBATED') and a.pay_status='P' and
		a.order_type='TRADE' and a.gmt_create <![CDATA[   <=  ]]>
		#{canWithDrawDate} and b.business_id =#{userId} and b.status='NEW'
	</select>
	<select id="getCannotWithDrawMoney" resultType="java.math.BigDecimal">
	select sum(b.balance_amount) from af_order a left join af_trade_order b
		on a.id = b.order_id where
		a.status in ('PAID','REBATED') and a.pay_status='P' and
		a.order_type='TRADE' and a.gmt_create <![CDATA[   >  ]]>
		#{cannotWithDrawDate} and b.business_id =#{userId} and b.status='NEW'
	</select>
	<select id="payOrderInfo"
			resultType="com.ald.fanbei.api.dal.domain.dto.AfTradeOrderStatisticsDto">
		select
		count(a.id) count,sum(a.actual_amount) money
		from
		af_order a left
		join af_user b
		on a.user_id =b.id
		left join af_trade_order c on a.id =
		c.order_id
		where c.business_id =
		#{businessId} and 	a.status in ('PAID','REBATED')
		<if test="startOfDate != null and startOfDate != '' ">
			and a.gmt_create <![CDATA[   >=  ]]>
			#{startOfDate}
		</if>
		<if test="endOfDate != null and endOfDate != '' ">
			and a.gmt_create <![CDATA[   <=  ]]>
			#{endOfDate}
		</if>
	</select>
	<select id="orderGridDate" resultType="java.lang.String">
		select distinct date_format(a.gmt_create, '%Y-%m-%d')
		from af_order a left join af_user b
		on a.user_id =b.id
		left join af_trade_order c on a.id = c.order_id
		where c.business_id = #{businessId}
		and c.status = 'NEW'
		<if test="startDate != null and startDate != '' ">
			and a.gmt_create <![CDATA[   >=  ]]>
			#{startDate}
		</if>
		<if test="endDate != null and endDate != '' ">
			and a.gmt_create <![CDATA[   <=  ]]>
			#{endDate}
		</if>
		<if test="orderStatus != null and orderStatus != '' ">
			and a.status = #{orderStatus}
		</if>
		<if test="orderStatus == null or orderStatus == ''" >
			and a.status in ('NEW', 'PAID')
		</if>
		order by a.gmt_create desc

	</select>
	<select id="orderGrid" resultType="com.ald.fanbei.api.dal.domain.dto.AfTradeOrderDto">
		select
		a.id,a.order_no,a.gmt_create,a.actual_amount,b.user_name,a.status
		orderStatus,c.status withDrawStatus from
		af_order a left join af_user b
		on a.user_id =b.id
		left join af_trade_order c on a.id = c.order_id
		where c.business_id = #{businessId}
		and c.status = 'NEW'
		<if test="startDate != null and startDate != '' ">
			and a.gmt_create <![CDATA[   >=  ]]>
			#{startDate}
		</if>
		<if test="endDate != null and endDate != '' ">
			and a.gmt_create <![CDATA[   <=  ]]>
			#{endDate}
		</if>
		<if test="orderStatus != null and orderStatus != '' ">
			and a.status = #{orderStatus}
		</if>
		<if test="orderStatus == null or orderStatus == ''" >
			and a.status in ('NEW', 'PAID','REBATED')
		</if>
		order by a.gmt_create desc
	</select>

	<select id="refundGridDate" resultType="java.lang.String">
		select distinct date_format(d.gmt_create, '%Y-%m-%d')
		from af_order a left join af_user b on a.user_id =b.id
		left join af_trade_order c on a.id = c.order_id
		left join af_order_refund d on d.order_id = a.id
		where c.business_id = #{businessId} and d.id is not null
		<if test="refundStatus != null and refundStatus != '' ">
			and c.status = #{refundStatus}
		</if>
		<if test="refundStatus == null or refundStatus == ''">
			and c.status in ('REFUNDING', 'REFUND')
		</if>
		<if test="startDate != null and startDate != '' ">
			and d.gmt_create <![CDATA[   >=  ]]>
			#{startDate}
		</if>
		<if test="endDate != null and endDate != '' ">
			and d.gmt_create <![CDATA[   <=  ]]>
			#{endDate}
		</if>
		order by d.gmt_create desc
	</select>
	<select id="refundGrid" resultType="com.ald.fanbei.api.dal.domain.dto.AfTradeOrderDto">
		select
		a.id,a.order_no,d.gmt_create,d.amount actualAmount,b.user_name,c.status
		withDrawStatus from
		af_order a left join af_user b
		on a.user_id =b.id
		left join af_trade_order c on a.id = c.order_id
		left join af_order_refund d on d.order_id = a.id
		where c.business_id = #{businessId} and d.id is not null
		<if test="refundStatus != null and refundStatus != '' ">
			and c.status = #{refundStatus}
		</if>
		<if test="refundStatus == null or refundStatus == ''">
			and c.status in ('REFUNDING', 'REFUND')
		</if>
		<if test="startDate != null and startDate != '' ">
			and d.gmt_create <![CDATA[   >=  ]]>
			#{startDate}
		</if>
		<if test="endDate != null and endDate != '' ">
			and d.gmt_create <![CDATA[   <=  ]]>
			#{endDate}
		</if>
		order by d.gmt_create desc
	</select>

	<select id="getCanWithDrawList" resultType="com.ald.fanbei.api.dal.domain.dto.AfTradeOrderDto">
		select
		a.id,a.order_no,a.gmt_create,a.actual_amount,a.status
		orderStatus,c.status withDrawStatus from
		af_order a left join
		af_trade_order c on a.id = c.order_id
		where
		 a.status in ('PAID','REBATED')  and
		a.pay_status='P' and
		a.order_type='TRADE' and a.gmt_create <![CDATA[   <=  ]]>
		#{canWithDrawDate} and c.business_id =#{businessId} and c.status='NEW'
	</select>
</mapper>
