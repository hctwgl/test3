<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- af_goods_double_eggs表:双蛋活动模块 -->
<mapper namespace="com.ald.fanbei.api.dal.dao.AfGoodsDoubleEggsDao">
    
    <!--基本的sql查询字段 公共引用...-->
    <sql id="queryFields">
        id rid,gmt_create,gmt_modified,goods_id,sort,start_time,end_time,already_count
    </sql>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="commonCondition">
    	WHERE is_delete = 0
        <if test="rid !=null">
            AND id  = #{rid,jdbcType=INTEGER}
        </if>
        <if test="gmtCreate !=null">
            AND gmt_create = #{gmtCreate,jdbcType=TIMESTAMP}
        </if>
        <if test="gmtModified !=null">
            AND gmt_modified = #{gmtModified,jdbcType=TIMESTAMP}
        </if>
        <if test="goodsId != null and goodsId != ''">
            AND goods_id = #{goodsId,jdbcType=INTEGER}
        </if>
        <if test="sort != null and sort != ''">
            AND sort = #{sort,jdbcType=INTEGER}
        </if>
        <if test="startTime !=null">
            AND start_time = #{startTime,jdbcType=TIMESTAMP}
        </if>
        <if test="endTime !=null">
            AND end_time = #{endTime,jdbcType=TIMESTAMP}
        </if>
        <if test="alreadyCount != null and alreadyCount != ''">
            AND already_count = #{alreadyCount,jdbcType=INTEGER}
        </if>
      
    </sql>

    
    <insert id="saveRecord" parameterType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo" keyProperty="rid">
    	<selectKey resultType="java.lang.Long" keyProperty="rid" order="AFTER" >
	      SELECT LAST_INSERT_ID()
	    </selectKey>
    
        INSERT INTO af_goods_double_eggs
        <trim prefix="(" suffix=")" suffixOverrides="," >
	        <if test="gmtCreate != null">        
	            gmt_create,
	        </if>
	        <if test="gmtModified != null">        
	            gmt_modified,
	        </if>
	        <if test="goodsId != null">        
	            goods_id,
	        </if>
	        <if test="sort != null">        
	            sort,
	        </if>
	        <if test="startTime != null">        
	            start_time,
	        </if>
	        <if test="endTime != null">        
	            end_time,
	        </if>
	        <if test="alreadyCount != null">        
	            already_count,
	        </if>
	        <if test="isOrdered != null">        
	            is_ordered,
	        </if>
        </trim>
        
        <trim prefix="values (" suffix=")" suffixOverrides="," >
		    <if test="gmtCreate != null" >
		       #{gmtCreate,jdbcType=TIMESTAMP},
		    </if>
		    <if test="gmtModified != null" >
		       #{gmtModified,jdbcType=TIMESTAMP},
		    </if>
		    <if test="goodsId != null" >
		       #{goodsId,jdbcType=INTEGER},
		    </if>
		    <if test="sort != null" >
		       #{sort,jdbcType=INTEGER},
		    </if>
		    <if test="startTime != null" >
		       #{startTime,jdbcType=TIMESTAMP},
		    </if>
		    <if test="endTime != null" >
		       #{endTime,jdbcType=TIMESTAMP},
		    </if>
		    <if test="alreadyCount != null" >
		       #{alreadyCount,jdbcType=INTEGER},
		    </if>
		    <if test="isOrdered != null" >
		       #{isOrdered,jdbcType=INTEGER},
		    </if>
        </trim>
    </insert>
    
    <update id="updateById"  parameterType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo">
        UPDATE af_goods_double_eggs
          <set>
            <if test="gmtCreate != null and gmtCreate != '' ">        
                gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},                
            </if>
            <if test="gmtModified != null and gmtModified != '' ">        
                gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},                
            </if>
            <if test="goodsId != null and goodsId != '' ">        
                goods_id = #{goodsId,jdbcType=INTEGER},                
            </if>
            <if test="sort != null and sort != '' ">        
                sort = #{sort,jdbcType=INTEGER},                
            </if>
            <if test="startTime != null and startTime != '' ">        
                start_time = #{startTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="endTime != null and endTime != '' ">        
                end_time = #{endTime,jdbcType=TIMESTAMP},                
            </if>
            <if test="alreadyCount != null and alreadyCount != '' ">        
                already_count = #{alreadyCount,jdbcType=INTEGER},                
            </if>
      
        </set>    
        WHERE is_delete = 0 AND id = #{rid ,jdbcType=BIGINT}
    </update>

	<select id="getById" resultType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo">
        SELECT
        <include refid="queryFields" />
        FROM af_goods_double_eggs
        WHERE is_delete = 0 AND id=#{rid ,jdbcType=BIGINT}
        LIMIT 0,1
    </select>

	<select id="getByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo" parameterType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo">
        SELECT
        <include refid="queryFields" />
        FROM af_goods_double_eggs
        <include refid="commonCondition"/> 
        limit 0,1
    </select>
               
    <select id="getListByCommonCondition" resultType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo" parameterType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo">
        SELECT
        <include refid="queryFields" />
        FROM af_goods_double_eggs
        <include refid="commonCondition"/>
    </select>
    
    <select id="getByGoodsId" parameterType="java.lang.Long" resultType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo">
      SELECT
        <include refid="queryFields" />
        FROM af_goods_double_eggs
      WHERE is_delete = 0 AND goods_id = #{goodsId} limit 0,1;
    </select>
    
       <select id="getByDoubleGoodsId" parameterType="java.lang.Long" resultType="com.ald.fanbei.api.dal.domain.AfGoodsDoubleEggsDo">
      SELECT
        <include refid="queryFields" />
        FROM af_goods_double_eggs
      WHERE is_delete = 0 AND id = #{doubleGoodsId};
    </select>
    
    <select id="getAvalibleDateList" resultType="java.util.Date" parameterType="java.lang.String">
	SELECT start_time FROM af_goods_double_eggs 
		WHERE is_delete = 0 
		and start_time >= #{startTime}
	GROUP BY start_time ORDER BY start_time ;
    </select>
    
    <select id="getgoodsByDate" resultType="com.ald.fanbei.api.dal.domain.GoodsForDate" >
		SELECT
			de.id AS double_goods_id,
			CASE
		WHEN CURRENT_DATE > date(de.start_time) THEN
			'4'
		WHEN now() > de.start_time THEN
			'2'
		ELSE
			'0'
		END AS STATUS,
		 de.goods_id,
		 g.stock_count,
		 <![CDATA[
		 CASE WHEN(
		 g.stock_count - de.already_count 
			)<0
			THEN 0
			ELSE
			g.stock_count - de.already_count 
			END
			AS count,
		]]>
		 g.price_amount AS sale_amount,
		 g.sale_amount AS real_amount,
		 g.`name` AS goods_name,
		 g.goods_icon,
		 g.thumbnail_icon,
		 g.goods_url
		FROM
			af_goods_double_eggs de
		INNER JOIN af_goods g ON g.id = de.goods_id
		INNER JOIN af_activity a ON a.id = de.activity_id
		WHERE
			de.is_delete = 0
		AND g.is_delete = 0
		AND a.is_delete = 0
		AND a.`status` = 2
		AND a.`name` = #{tag}
		AND DATE(de.start_time) = DATE(#{startDate})
			ORDER BY
				de.sort;
    </select>
    
    <select id="isSubscribed" resultType="java.lang.Integer" parameterType="java.lang.Long">
	    SELECT
			COUNT(1)
		FROM
			af_goods_double_eggs_user
		WHERE
			is_delete = 0
		AND user_id = #{userId}
		AND double_eggs_id = #{doubleGoodsId};
    </select>
    
    <update id="updateCountById" parameterType="java.lang.Long" >
		UPDATE af_goods_double_eggs
		SET already_count = already_count + 1
		WHERE
			goods_id = #{goodsId};
    </update>

    <select id="getFivePictures" resultType="com.ald.fanbei.api.dal.domain.AfSFgoodsVo" parameterType="java.lang.Long">
    		SELECT
				de.goods_id AS id,
				de.activity_id AS activity_id,
				(
					SELECT
						count(*)
					FROM
						af_goods_double_eggs_user u
					WHERE
						u.double_eggs_id = de.id
				)+de.already_count  AS order_number,
				
						CASE WHEN (
									SELECT
										count(*)
									FROM
										af_goods_double_eggs_user u
									WHERE
										u.double_eggs_id = de.id
									AND u.user_id = #{userId}
						) > 0 THEN
								'Y'
						ELSE
								'N'
						END
			
			as is_order
			FROM
				af_goods_double_eggs de
			WHERE
				de.reserve = 'Main'
			ORDER BY
				de.goods_id;
    </select>
    <select id="shouldOnlyAp" parameterType="java.lang.Long" resultType="java.lang.Integer">
			SELECT
				COUNT(1)
			FROM
				af_goods_double_eggs de
			WHERE
			de.goods_id = #{goodsId} AND
			 de.is_delete = 0
		AND (de.start_time BETWEEN 
	(SELECT `value` FROM af_resource WHERE type = 'SPRING_FESTIVAL_ACTIVITY' AND sec_type ='AP_ONLY_LIMIT' )
	AND (SELECT value_1 FROM af_resource WHERE type = 'SPRING_FESTIVAL_ACTIVITY' AND sec_type ='AP_ONLY_LIMIT' ))
    </select>
    
    <select id="getGoodsListByActivityId" parameterType="java.lang.Long" resultType="com.ald.fanbei.api.dal.domain.GoodsForDate">
		    	SELECT
					de.id AS double_goods_id,
					CASE
				WHEN NOW() &gt; de.start_time AND NOW() &lt; de.end_time THEN
					'2'
				WHEN now() &lt; de.start_time THEN
					'0'
				ELSE
					'4'
				END AS STATUS,
				 de.goods_id,
				 g.stock_count,
				 <![CDATA[
				 CASE WHEN(
				 g.stock_count - de.already_count 
					)<0
					THEN 0
					ELSE
					g.stock_count - de.already_count 
					END
					AS count,
				]]>
				 g.price_amount AS sale_amount,
				 g.sale_amount AS real_amount,
				 g.`name` AS goods_name,
				 g.goods_icon,
				 g.thumbnail_icon,
				 g.goods_url
				FROM
					af_goods_double_eggs de
				INNER JOIN af_goods g ON g.id = de.goods_id
				INNER JOIN af_activity a ON a.id = de.activity_id
				WHERE
					de.is_delete = 0
				AND g.is_delete = 0
				AND a.is_delete = 0
				AND a.`status` = 2
				AND de.activity_id = #{activityId}
					ORDER BY
						de.sort;
    </select>
</mapper>
