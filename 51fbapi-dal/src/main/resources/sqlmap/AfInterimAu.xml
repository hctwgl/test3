<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ald.fanbei.api.dal.dao.AfInterimAuDao">
    <sql id="queryFields">
        id rid,user_id,gmt_create,gmt_modified,interim_amount,interim_used,gmt_failuretime
    </sql>

    <insert id="addInterimAu" parameterType="AfInterimAuDo" useGeneratedKeys="true" keyProperty="rid">
        INSERT INTO af_interim_au(user_id,gmt_create,gmt_modified,interim_amount,interim_used,gmt_failuretime)
        VALUES (
        #{userId},
        NOW(),
        NOW(),
        #{interimAmount},
        #{interimUsed},
        #{gmtFailuretime}
        )
    </insert>

    <select id="getByUserId" resultType="AfInterimAuDo">
        SELECT
        <include refid="queryFields"/>
        FROM af_interim_au WHERE user_id=#{userId}
    </select>

    <update id="updateInterimUsed">
        UPDATE
        af_interim_au
        SET
        gmt_modified = NOW(),
        interim_used = interim_used + #{usedAmount}
        WHERE
        user_id = #{userId}
    </update>
    <select id="selectExistAuByUserId" resultType="java.lang.Integer">
        SELECT count(1)
        FROM af_interim_au WHERE user_id=#{userId}
        and(interim_used>0 or gmt_failuretime > NOW());
    </select>

    <select id="selectAuByUserId" resultType="java.math.BigDecimal">
        SELECT interim_amount
        FROM af_interim_au WHERE user_id=#{userId}
    </select>

    <select id="selectApplyFailByUserId" resultType="AfInterimAuDo">
        SELECT
        user_id,gmt_create,interim_amount,gmt_failuretime
        FROM af_interim_au_log
        WHERE user_id=#{userId} and status =1
        order by gmt_create desc
    </select>
    <insert id="insertInterimAmount">
    INSERT INTO af_interim_au(user_id,gmt_create,gmt_modified,interim_amount,interim_used,gmt_failuretime)
        VALUES (
        #{userId},
        NOW(),
        NOW(),
        #{interimAmount},
        0,
        #{gmtFailuretime}
        )
   </insert>

    <insert id="insertInterimAmountLog">
        INSERT INTO af_interim_au_log(user_id,gmt_create,interim_amount,gmt_failuretime,status)
        VALUES (
        #{userId},
        NOW(),
        #{interimAmount},
        #{gmtFailuretime},
        #{status}
        )
    </insert>

    <select id="getFailureCount" resultType="int">
          SELECT
          count(1)
        FROM
        af_interim_au
        WHERE user_id=#{userId}
    </select>

    <update id="updateInterimAmount">
        UPDATE
        af_interim_au
        SET
        gmt_modified = NOW(),
        interim_amount=#{interimAmount},
        gmt_failuretime=#{gmtFailuretime}
        where
        user_id =#{userId}
    </update>

    <select id="getLastLogByUserId" resultType="AfInterimAuLogDo">
        SELECT *
        FROM af_interim_au_log WHERE user_id=#{userId} order by id DESC limit 1
    </select>

    <!--现金贷最小还款时间至今天数-->
    <select id="getLoanMinRepayDay" resultType="java.lang.Integer">
        SELECT to_days(NOW())-to_days(gmt_plan_repayment) FROM af_borrow_cash WHERE is_delete = 0 AND `status` IN ('FINSH','TRANSED')
		AND user_id=#{userId} ORDER BY gmt_plan_repayment limit 1
    </select>
    <!--消费分期最小还款时间至今天数-->
    <select id="getConsumeMinRepayDay" resultType="java.lang.Integer">
        SELECT to_days(NOW())-to_days(gmt_pay_time) FROM af_borrow_bill WHERE is_delete = 0  AND is_out = 1 AND `status` != 'C'
		AND user_id=#{userId} ORDER BY gmt_pay_time limit 1;
    </select>
    <!--现金贷续借次数-->
    <select id="getLoanRenewCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM af_renewal_detail WHERE is_delete=0 AND status='Y' AND user_id=#{userId}
    </select>
    <!--发生当天借款当天还款行为次数-->
    <select id="getBorrowRepayCount" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM af_borrow_cash WHERE is_delete = 0 AND `status` = 'FINSH' AND to_days(gmt_create)=to_days(gmt_modified) AND user_id=#{userId}
    </select>
    <!--累计分期次数 累计分期金额-->
    <select id="getSumConsume" resultType="HashMap">
        SELECT COUNT(1) as sumConsumeCount,IFNULL(SUM(amount),0) as sumConsumeAmount FROM af_borrow WHERE is_delete = 0  AND `status` IN ('FINISH','TRANSED') AND amount>=1 AND user_id=#{userId}
    </select>
    <!--累计现金贷次数	累计现金贷金额-->
    <select id="getSumLoan" resultType="HashMap">
        SELECT COUNT(1) as sumLoanCount,IFNULL(SUM(amount),0) as sumLoanAmount FROM af_borrow_cash WHERE is_delete = 0 AND `status` IN ('FINSH','TRANSED') AND user_id=#{userId}
    </select>
    <!--消费分期已出账单数-->
    <select id="getConsumeBillCount" resultType="java.lang.Integer">
        SELECT COUNT(1) as consumeBillCount FROM af_borrow_bill WHERE is_delete = 0 AND is_out = 1 AND `status` != 'C' AND user_id=#{userId}
    </select>
</mapper>