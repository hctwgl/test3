<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ald.fanbei.api.dal.dao.AfBorrowCashDao">
	<sql id="queryFields">
		id
		rid,gmt_create,gmt_modified,borrow_no,user_id,type,amount,status,remark,card_number,card_name,overdue_day,
		overdue_amount,arrival_amount,gmt_arrival,review_name,review_user_name,review_details,gmt_review,poundage,rate_amount,repay_amount,latitude,longitude,province,city,county,overdue_status,review_status,address,gmt_close,rish_order_no,
		gmt_plan_repayment,sum_rate,sum_overdue,sum_jfb,sum_rebate,sum_renewal_poundage,renewal_num
	</sql>

	<insert id="addBorrowCash" parameterType="AfBorrowCashDo"
		useGeneratedKeys="true" keyProperty="rid">
		INSERT INTO
		af_borrow_cash(gmt_create , gmt_modified , borrow_no , user_id , type,
		amount , status , card_number , card_name , poundage , rate_amount ,
		latitude , longitude , province ,arrival_amount, city , county,
		address, poundage_rate, base_bank_rate)
		VALUES (
		NOW(),
		NOW(),
		#{borrowNo},
		#{userId},
		#{type},
		#{amount},
		#{status},
		#{cardNumber},
		#{cardName},
		#{poundage},
		#{rateAmount},
		#{latitude},
		#{longitude},
		#{province},
		#{arrivalAmount},
		#{city},
		#{county},
		#{address},
		#{poundageRate},
		#{baseBankRate}
		)
	</insert>

	<update id="updateBorrowCash" parameterType="AfBorrowCashDo">
		UPDATE af_borrow_cash SET gmt_modified = NOW()
		<if test="borrowNo != null">
			,borrow_no=#{borrowNo}
		</if>
		<if test="userId != null">
			,user_id=#{userId}
		</if>
		<if test="type != null">
			,type=#{type}
		</if>
		<if test="amount != null">
			,amount=#{amount}
		</if>
		<if test="status != null">
			,status=#{status}
		</if>
		<if test="remark != null">
			,remark=#{remark}
		</if>
		<if test="cardNumber != null">
			,card_number=#{cardNumber}
		</if>
		<if test="cardName != null">
			,card_name=#{cardName}
		</if>
		<if test="overdueDay != null">
			,overdue_day=#{overdueDay}
		</if>
		<if test="overdueAmount != null">
			,overdue_amount=#{overdueAmount}
		</if>
		<if test="arrivalAmount != null">
			,arrival_amount=#{arrivalAmount}
		</if>
		<if test="gmtArrival != null">
			,gmt_arrival=#{gmtArrival}
		</if>
		<if test="reviewName != null">
			,review_name=#{reviewName}
		</if>
		<if test="reviewUserName != null">
			,review_user_name=#{reviewUserName}
		</if>
		<if test="reviewDetails != null">
			,review_details=#{reviewDetails}
		</if>
		<if test="gmtReview != null">
			,gmt_review=#{gmtReview}
		</if>
		<if test="gmtClose != null">
			,gmt_close=#{gmtClose}
		</if>
		<if test="poundage != null">
			,poundage=#{poundage}
		</if>
		<if test="overdueStatus != null">
			,overdue_status=#{overdueStatus}
		</if>
		<if test="reviewStatus != null">
			,review_status=#{reviewStatus}
		</if>
		<if test="rateAmount != null">
			,rate_amount=#{rateAmount}
		</if>
		<if test="repayAmount != null">
			,repay_amount=#{repayAmount}
		</if>
		<if test="rishOrderNo != null">
			,rish_order_no=#{rishOrderNo}
		</if>

		<if test="gmtPlanRepayment != null">
			,gmt_plan_repayment=#{gmtPlanRepayment}
		</if>
		<if test="sumRate != null">
			,sum_rate=#{sumRate}
		</if>
		<if test="sumOverdue != null">
			,sum_overdue=#{sumOverdue}
		</if>
		<if test="sumJfb != null">
			,sum_jfb=#{sumJfb}
		</if>
		<if test="sumRebate != null">
			,sum_rebate=#{sumRebate}
		</if>
		<if test="sumRenewalPoundage != null">
			,sum_renewal_poundage=#{sumRenewalPoundage}
		</if>
		<if test="renewalNum != null and renewalNum !=''">
			,renewal_num=#{renewalNum}
		</if>
		WHERE id = #{rid}
	</update>

	<update id="deleteBorrowCash" parameterType="java.lang.Long">
		UPDATE
		af_borrow_cash SET is_delete = 1 WHERE id=#{rid}
	</update>

	<select id="getBorrowCashByUserId" parameterType="java.lang.Long"
		resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		ORDER BY
		gmt_create DESC
		LIMIT
		1
	</select>

	<select id="getBorrowCashByrid" parameterType="java.lang.Long"
		resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		id = #{rid}
	</select>
	<select id="getBorrowCashListByUserId" resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		ORDER BY
		gmt_create DESC
		LIMIT
		#{start},20
	</select>

	<select id="getCurrentLastBorrowNo" resultType="java.lang.String">
		select borrow_no
		from af_borrow_cash WHERE borrow_no LIKE CONCAT(#{orderNoPre},"%")
		ORDER BY id DESC LIMIT 1;
	</select>

	<select id="getBorrowCashByRishOrderNo" parameterType="java.lang.String"
		resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		rish_order_no = #{rishOrderNo}
	</select>

	<select id="getUserDayLastBorrowCash" resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		and  <![CDATA[ gmt_create  >=  #{startTime}  ]]>
		and  <![CDATA[ gmt_create  <=  #{endTime}  ]]>
		ORDER BY gmt_create DESC LIMIT 1;
	</select>
	
	<select id="getSpecBorrowCashNums" resultType="java.lang.Integer">
		SELECT
		count(*) 
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		and
		review_status = #{reviewStatus}
		and  <![CDATA[ gmt_create  >=  #{startTime}  ]]>;
	</select>
	
	<select id="getBorrowNumByUserId" resultType="java.lang.Integer">
		select count(*) from `af_borrow_cash` WHERE `status` in ('FINSH', 'TRANSED') and `user_id` =#{userId}; 
	</select>
	
	<select id ="getBorrowCashByStatusNotInFinshAndClosed" resultType="AfBorrowCashDo">
	SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		and status not in ('CLOSED','FINSH');
	</select>
	<select id ="getNowTransedBorrowCashByUserId" resultType="AfBorrowCashDo">
	SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		and status = 'TRANSED'
		ORDER BY
		gmt_create ASC
		LIMIT
		1
	</select>
	
	<select id ="getNowUnfinishedBorrowCashByUserId" resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
		af_borrow_cash
		WHERE
		is_delete = 0
		AND
		user_id = #{userId}
		and status not in ('CLOSED','FINSH')
		ORDER BY
		gmt_create ASC
		LIMIT
		1
	</select>
	
	<select id ="getBorrowCashInfoByBorrowNo" resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
			af_borrow_cash
		WHERE
			is_delete = 0
		AND 
			borrow_no = #{borrowNo}
		LIMIT 1
	</select>
	
	<select id ="getRiskRefuseBorrowCash" resultType="AfBorrowCashDo">
		SELECT
		<include refid="queryFields" />
		FROM
			af_borrow_cash
		WHERE
			is_delete = 0
		AND 
			review_status = 'REFUSE'
		AND
			gmt_create between #{gmtStart} AND #{gmtEnd}
		AND
			user_id = #{userId}
	</select>
	
	<select id ="getBorrowedUserIds" resultType="String">
		SELECT
			DISTINCT user_id 
		FROM
			af_borrow_cash
	</select>
	
</mapper>