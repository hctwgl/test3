<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ald.fanbei.api.dal.dao.AfBorrowBillDao">
	<sql id="queryFields">
		id rid,gmt_create,gmt_modified,user_id,borrow_id,borrow_no,name,gmt_borrow,bill_year,bill_month,nper,bill_nper,bill_amount,type,
		status,overdue_status,overdue_days,repayment_id,principle_amount,interest_amount,overdue_interest_amount,poundage_amount,overdue_poundage_amount,
		rebate_amount,is_free_interest,is_out,gmt_out_day,gmt_pay_time
		
	</sql>
	
	<sql id="queryWithFields">
		b.id rid,b.gmt_create,b.gmt_modified,b.user_id,b.borrow_id,b.borrow_no,b.name,b.gmt_borrow,b.bill_year,b.bill_month,
		b.nper,b.bill_nper,b.bill_amount,b.type,b.status,b.overdue_status,b.overdue_days,b.repayment_id,b.principle_amount,b.interest_amount,
		b.rebate_amount,b.is_free_interest,b.is_out,b.gmt_out_day,b.gmt_pay_time,
		b.overdue_interest_amount,b.poundage_amount,b.overdue_poundage_amount,w.order_id,w.order_no
	</sql>
	
	<select id="getMonthBillList" resultType="AfBorrowBillDo" parameterType="AfBorrowBillQuery">
		SELECT 
			<include refid="queryFields"/>
		FROM af_borrow_bill WHERE is_delete = 0 AND user_id=#{userId} 
		AND bill_year = #{billYear} AND bill_month = #{billMonth} AND status <![CDATA[<>'F']]>
    </select>
    
    <select id="existMonthRepayingBill" resultType="java.lang.Integer" >
		SELECT 
			count(1)
		FROM af_borrow_bill WHERE is_delete = 0 AND user_id=#{userId} 
		AND bill_year = #{billYear} AND bill_month = #{billMonth} AND status = 'D'
    </select>
    
    <select id="getBillListByBorrowIdAndStatus" resultType="AfBorrowBillDo" >
		SELECT 
			<include refid="queryFields"/>
		FROM 
			af_borrow_bill 
		WHERE is_delete = 0 AND borrow_id = #{borrowId} 
		AND status = #{status}
    </select>
    
   	<select id="getBillListByIds" resultType="AfBorrowBillDo" parameterType="java.util.List">
   		SELECT 
			<include refid="queryFields"/>
		FROM 
			af_borrow_bill 
		WHERE 
			is_delete = 0 
		AND id IN
		<foreach collection="items" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>
   	</select>
    
    <select id="getMonthlyBillByStatus" resultType="java.math.BigDecimal">
		SELECT 
			sum(bill_amount)
		FROM af_borrow_bill WHERE is_delete = 0 AND user_id=#{userId} 
		AND bill_year = #{billYear} AND bill_month = #{billMonth} AND status = #{status}
    </select>

	<select id="getMonthlyBillByStatusNew" resultType="java.math.BigDecimal">
		SELECT
		sum(bill_amount)
		FROM af_borrow_bill WHERE is_delete = 0 AND user_id=#{userId}
		AND bill_year = #{billYear} AND bill_month = #{billMonth} AND status = #{status} and is_out =1;
	</select>

	<select id="getMonthlyBillByStatusNewV1" resultType="java.math.BigDecimal">
		SELECT
		sum(bill_amount)
		FROM af_borrow_bill WHERE is_delete = 0 AND user_id=#{userId}
		AND status = #{status} and is_out =1;
	</select>


	<select id="getUserFullBillList" resultType="AfBorrowTotalBillDo">
		SELECT 
		  bill_amount,
		  bill_year,
		  bill_month,
		  status
		FROM
		  af_borrow_total_bill 
		WHERE is_delete = 0 
		  AND user_id = #{userId}
		ORDER BY bill_year DESC,
		  bill_month DESC
    </select>
    
    <select id="getBorrowBillById" resultType="AfBorrowBillDo">
		SELECT 
			<include refid="queryFields"/>
		FROM af_borrow_bill WHERE is_delete = 0 AND id = #{rid}
    </select>
    
    <select id="getBorrowBillByBorrowId" resultType="java.math.BigDecimal">
		SELECT 
			sum(bill_amount) bill_amount
		FROM af_borrow_bill WHERE is_delete = 0 AND borrow_id = #{borrowId}
    </select>
    
    <select id="getBorrowBillDtoById" resultType="AfBorrowBillDto">
		SELECT 
			<include refid="queryWithFields"/>
		FROM af_borrow_bill b
		left join
			af_borrow w
		on w.is_delete=0 and w.id = b.borrow_id
		 WHERE b.is_delete = 0 AND b.id = #{rid}
    </select>
    
    <select id="getTotalMonthlyBillByUserId" resultType="AfBorrowBillDo">
		SELECT SUM(bill_amount) bill_amount,GROUP_CONCAT(id) bill_ids
		FROM af_borrow_bill
		WHERE is_delete=0 AND user_id = #{userId}
		AND bill_year=#{billYear} AND bill_month=#{billMonth} AND STATUS ='N'
    </select>
    
    <select id="getBillAmountByIds" resultType="AfBorrowBillDo">
		SELECT SUM(bill_amount) bill_amount,SUM(principle_amount) principle_amount,min(bill_year) bill_year,min(bill_month) bill_month,min(type) type,
		min(borrow_no) borrow_no,min(name) name,count(1) count
		FROM af_borrow_bill
		WHERE is_delete=0  AND STATUS IN ('N','D')
		AND id in (
		<foreach collection="ids" item="item" index="index" separator="," >
			#{item}
		</foreach>
		)
    </select>

	<select id="getBillTrainAmountByIds" resultType="AfBorrowBillDo">
		SELECT SUM(a.bill_amount) bill_amount,SUM(a.principle_amount) principle_amount,min(a.bill_year) bill_year,min(a.bill_month) bill_month,min(a.type) type,
		min(a.borrow_no) borrow_no,min(a.name) name,count(1) count
		FROM af_borrow_bill as a
		INNER JOIN af_borrow as b ON a.borrow_id=b.id
		INNER JOIN af_order as c ON b.order_id=c.id
		INNER JOIN af_trade_order as d ON c.id=d.order_id
		INNER JOIN af_trade_business_info as e ON d.business_id=e.business_id
		INNER JOIN af_business_type as f ON e.type=f.id
		WHERE a.is_delete=0  AND a.STATUS IN ('N','D')
		AND c.order_type = 'TRADE' AND f.`code` = 'TRAIN'
		AND a.id in (
		<foreach collection="ids" item="item" index="index" separator="," >
			#{item}
		</foreach>
		)
	</select>

	<select id="getBillHouseAmountByIds" resultType="AfBorrowBillDo">

		SELECT SUM(b.bill_amount) bill_amount,SUM(b.principle_amount) principle_amount
		FROM af_borrow_bill b
		WHERE b.is_delete=0 and b.type ='HOME_CONSUME'
		AND b.id in (
		<foreach collection="ids" item="item" index="index" separator=",">
			#{item}
		</foreach>
		)
	</select>


    <update id="updateBorrowBillStatusByIds">
    	UPDATE 
		  af_borrow a,
		  af_borrow_bill b 
		SET
		  a.gmt_modified = NOW(),
		  b.gmt_modified = NOW(),
		  b.status = #{status},
		  b.repayment_id = #{repaymentId},
		  a.nper_repayment = a.nper_repayment + 1,
		  a.repay_prin_amount = a.repay_prin_amount + b.principle_amount 
		WHERE b.is_delete = 0 
		  AND a.is_delete = 0 
		  AND a.id = b.borrow_id
		AND b.id in (
		<foreach collection="ids" item="item" index="index" separator="," >
			#{item}
		</foreach>
		)
	</update>
    
    <update id="updateBorrowBillStatusById">
    	UPDATE 
		  af_borrow a,
		  af_borrow_bill b 
		SET
		  a.gmt_modified = NOW(),
		  b.gmt_modified = NOW(),
		  b.status = #{status},
		  b.repayment_id = #{repaymentId},
		  b.coupon_amount = #{couponAmount},
		  b.jfb_amount = #{jfbAmount},
		  b.rebate_amount = #{rebateAmount},
		  a.nper_repayment = a.nper_repayment + 1,
		  a.repay_prin_amount = a.repay_prin_amount + b.principle_amount 
		WHERE b.is_delete = 0 
		  AND a.is_delete = 0 
		  AND a.id = b.borrow_id
		  AND b.id = #{id}
	</update>   
	
	<update id="updateBorrowBillStatusByBillIdsAndStatus" >
		UPDATE 
		  af_borrow_bill
		SET
		  gmt_modified = NOW(),
		  status = #{status}
		WHERE 
			is_delete = 0
		AND
			id in 
			<foreach collection="items" item="item" open="(" close=")" separator=",">
				#{item}	
			</foreach> 
		
	</update>
 
    <update id="updateTotalBillStatus">
		update af_borrow_total_bill  set gmt_modified=NOW(),status=#{status}
		WHERE is_delete=0
		AND user_id=#{userId} AND bill_year=#{year} AND bill_month=#{month}
	</update>
    
    <select id="getUserMonthlyBillNotpayCount" resultType="java.lang.Integer">
		SELECT count(1)
		FROM af_borrow_bill
		WHERE is_delete=0  AND STATUS ='N' AND user_id=#{userId} AND bill_year=#{year} AND bill_month=#{month}
    </select> 
    
    <select id="getUserMonthlyBillTotalCount" resultType="java.lang.Integer">
		SELECT count(1)
		FROM af_borrow_bill
		WHERE is_delete=0 AND user_id=#{userId} AND bill_year=#{year} AND bill_month=#{month} AND STATUS !='F'
    </select>
    
    <select id="getBorrowBillWithNoPayByUserId" resultType="java.lang.Integer">
		SELECT count(1)
		FROM af_borrow_bill
		WHERE is_delete=0 AND status='N' AND user_id=#{userId}
    </select>
    
    <update id="updateNotRepayedBillStatus" >
    	UPDATE 
		  af_borrow_bill 
		SET
		  gmt_modified = NOW(),
		  status = #{status}
		WHERE 
		  is_delete = 0 
		  AND borrow_id = #{borrowId}
		  AND status = 'N'
    </update>
    
    <update id="updateBorrowBillStatusByBorrowId" >
    	UPDATE 
		  af_borrow_bill 
		SET
		  gmt_modified = NOW(),
		  status = #{status}
		WHERE 
		  is_delete = 0 
		  AND borrow_id = #{borrowId}
    </update>
    
    <select id="getBillAmountByCashIds" resultType="AfBorrowBillDo">
		SELECT SUM(b.bill_amount) bill_amount,SUM(b.principle_amount) principle_amount
		FROM af_borrow_bill b
		WHERE b.is_delete=0 and b.type='CASH'
		AND b.id in (
		<foreach collection="ids" item="item" index="index" separator="," >
			#{item}
		</foreach>
		)
    </select>

	<select id="getAllBorrowBillByBorrowId" resultType="AfBorrowBillDo">
		SELECT
		<include refid="queryFields"/>
		FROM
		af_borrow_bill
		WHERE is_delete = 0
		AND borrow_id = #{borrowId}
		ORDER BY bill_nper ASC
	</select>
    
    <select id="getPaidBillNumByBorrowId" resultType="java.lang.Integer">
		select count(1) from `af_borrow_bill` WHERE `status` ='Y' and `borrow_id` = #{borrowId}; 
	</select>
	
	<select id="getSumIncomeByBorrowId" resultType="java.math.BigDecimal">
		select IFNULL(sum(interest_amount+overdue_interest_amount+poundage_amount+overdue_poundage_amount),0) income FROM af_borrow_bill WHERE status ='Y' and borrow_id=#{borrowId};
    </select>
    
    <select id="getSumOverdueDayByBorrowId" resultType="java.lang.Long">
		select IFNULL(sum(overdue_days),0) FROM af_borrow_bill WHERE status ='Y' and overdue_status='Y' and borrow_id= #{borrowId}; 
	</select>
	
	<select id="getSumOverdueCountByBorrowId" resultType="java.lang.Integer">
		select count(1) from `af_borrow_bill` where `borrow_id` = #{borrowId} and `overdue_status` ='Y'; 
	</select>
	<select id="getMaxOverdueCountByBorrowId" resultType="java.lang.Integer">
		select ifnull(max(overdue_days),0) as maxOverdueCount from `af_borrow_bill` where `borrow_id` = #{borrowId} and `overdue_status` ='Y'; 
	</select>
	
	<select id="getOverduedAndNotRepayBillId" resultType="java.lang.Long">
		select max(id) FROM af_borrow_bill WHERE status ='N' and overdue_status='Y' and borrow_id= #{borrowId}; 
	</select>
	
	<select id="getOverduedAndNotRepayBill" resultType="AfBorrowBillDo">
		SELECT 
			b.borrow_no, max(bb.overdue_days) overdue_days, b.overdue_num bill_nper
			FROM
			    af_borrow b
			LEFT JOIN af_borrow_bill bb 
			    ON b.id = bb.borrow_id 
			WHERE
			      b.is_delete = 0
			  AND bb.is_delete = 0
			  AND b.overdue_num > 0 
			  AND bb.overdue_status = 'Y' 
			  AND bb.status  <![CDATA[<>]]> 'Y'
			  AND b.id = #{borrowId} 
			  AND bb.id <![CDATA[<>]]> #{billId}
			GROUP BY b.borrow_no 
	</select>

	<select id="getNoPayBorrowBillByUserId" resultType="AfBorrowBillDo">
		SELECT <include refid="queryWithFields"/>
		FROM `af_borrow_bill` where `status` = 'N' and `user_id`  = #{userId}  ORDER BY `bill_year` asc ,`bill_month` asc
	</select>


	<select id="getAllBorrowNoPayByUserId" resultType="AfBorrowBillDo">
		SELECT
		<include refid="queryFields"/>
		FROM
		af_borrow_bill
		WHERE is_delete = 0
		AND user_id = #{userId}
		AND `status` = 'N'
		order by bill_year asc , bill_month asc
	</select>

	<select id="getBorrowBillNoPaySumByUserId" resultType="HashMap">
		select bill_year,bill_month,SUM(bill_amount) totalAmount,SUM(overdue_interest_amount) interest,overdue_status from af_borrow_bill
			where user_id = #{userId} and `status` = 'N'
		GROUP BY bill_year,bill_month
	</select>


	<select id="getBorrowBillList"   resultType="AfBorrowBillDo">
		SELECT
		<include refid="queryFields"/>
		FROM
		af_borrow_bill
		WHERE
		is_delete = 0
		<if test="status != 'All'">
			and status = #{status}
		</if>
		and user_id = #{userId}
		ORDER by gmt_create asc
	</select>

	<select id="getBorrowBillListY"   resultType="AfBorrowBillDo">
		SELECT
		<include refid="queryFields"/>
		FROM
		af_borrow_bill
		WHERE
		is_delete = 0
		and status = 'Y'
		and user_id = #{userId}
		and bill_year =#{billYear}
		and bill_month = #{billMonth}
		ORDER by gmt_create asc
	</select>

	<select id="getTotalMonthlyBillByIds" resultType="AfBorrowBillDo">
		SELECT SUM(bill_amount) bill_amount,GROUP_CONCAT(id) bill_ids
		FROM af_borrow_bill
		WHERE is_delete=0 AND user_id = #{userId}
		AND STATUS ='N'
		AND id IN
		<foreach item="item" index="index" collection="ids" open="(" separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getLastOutBill" resultType="AfBorrowBillDo">
		SELECT <include refid="queryFields"/> from af_borrow_bill
		where user_id = #{userId}  and is_out = 1 and is_delete = 0 order by gmt_out_day desc limit 0,1;
	</select>

	<select id="getBorrowBillTotalNow" resultType="AfBorrowTotalBillDo">
		SELECT
		*
		FROM
		af_borrow_total_bill
		WHERE is_delete = 0
		AND user_id = #{userId}
		AND bill_year = #{billYear}
		AND bill_month = #{billMonth}
		ORDER BY id desc, bill_year DESC,
		bill_month DESC LIMIT 0,1
	</select>
	<select id="getOverdueDataToRiskByBillIds" resultType="AfOverdueOrderDto">
		SELECT distinct ao.`id` orderId,
			ao.order_no orderNo,
			ao.order_type orderType,
			ao.shop_name shopName,
			ao.goods_name goodsName,
			ao.count count,
			ao.price_amount priceAmount,
			ao.sale_amount saleAmount,
			ao.actual_amount actualAmount,
			ao.borrow_amount borrowAmount,
			ao.bank_amount bankAmount,
			ao.pay_type payType,
			ao.gmt_pay gmtPay,
			ao.nper nper,
			ao.consignee consignee,
			ao.consignee_mobile consigneeMobile,
			ao.address consigneeAddress,
			aub.`card_number` bankCard,
            aub.`bank_name` bankName,
            ao.bank_id bankId
		  FROM `af_order` ao
		  LEFT JOIN `af_borrow` ab on ab.`order_id`= ao.`id`
		  LEFT JOIN `af_borrow_bill` abb on abb.`borrow_id`= ab.`id`
		  LEFT JOIN `af_user_bankcard` aub on aub.`user_id` = ao.`user_id` 
			WHERE ab.`is_delete` = 0
			AND abb.`is_delete` = 0
			AND aub.`is_delete` = 0
			AND aub.`is_main` = 'Y'
			AND aub.`status` = 'B'
			AND abb.id IN
			   <foreach collection="items" item="item" index="index" separator="," open="(" close=")">
					#{item}
			   </foreach>
			ORDER BY ao.`id` 
	</select>
	
	<select id="getAfOverdueBillDtoByBillIds" resultType="AfOverdueBillDto">
	  SELECT ab.`id` borrowId,
	   abb.id billId,
       abb.borrow_no borrowNo,
       ab.gmt_create gmtBorrow,
       abb.bill_year billYear,
       abb.bill_month billMonth,
       abb.nper nper,
       abb.bill_nper billNper,
       abb.bill_amount billAmount,
       abb.status status,
       abb.remark remark,
       abb.overdue_days overdueDays,
       abb.principle_amount principleAmount,
       abb.interest_amount interestAmount,
       abb.overdue_interest_amount overdueInterestAmount,
       abb.poundage_amount poundageAmount,
       abb.overdue_poundage_amount overduePoundageAmount,
       abbb.gmt_create repayDate,
       abb.gmt_pay_time lastRepayDay	
	  FROM `af_borrow` ab 
	  LEFT JOIN `af_borrow_bill` abb on abb.`borrow_id`= ab.`id`
	  LEFT JOIN `af_repayment` abbb on abb.repayment_id=abbb.id
	 WHERE ab.`is_delete`= 0
	   AND abb.`is_delete`= 0
	   AND abb.id IN
	   <foreach collection="items" item="item" index="index" separator="," open="(" close=")">
			#{item}
	   </foreach>
	   AND ab.`order_id` = #{orderId}
	 ORDER BY abb.bill_year DESC,
			 abb.bill_month DESC
	</select>

	<select id="getOverdueDataToRiskByConsumerNo" resultType="AfOverdueOrderDto">
		SELECT distinct ao.`id` orderId,
		ao.order_no orderNo,
		ao.order_type orderType,
		ao.shop_name shopName,
		ao.goods_name goodsName,
		ao.count count,
		ao.price_amount priceAmount,
		ao.sale_amount saleAmount,
		ao.actual_amount actualAmount,
		ao.borrow_amount borrowAmount,
		ao.bank_amount bankAmount,
		ao.pay_type payType,
		ao.gmt_pay gmtPay,
		ao.nper nper,
		ao.consignee consignee,
		ao.consignee_mobile consigneeMobile,
		ao.address consigneeAddress,
		aub.`card_number` bankCard,
		aub.`bank_name` bankName,
		ao.bank_id bankId
		FROM `af_order` ao
		LEFT JOIN `af_borrow` ab on ab.`order_id`= ao.`id`
		LEFT JOIN `af_borrow_bill` abb on abb.`borrow_id`= ab.`id`
		LEFT JOIN `af_user_bankcard` aub on aub.`user_id` = ao.`user_id`
		WHERE ab.`is_delete` = 0
		AND abb.`is_delete` = 0
		AND aub.`is_delete` = 0
		AND aub.`is_main` = 'Y'
		AND aub.`status` = 'B'
		AND abb.`type` = 'CONSUME'
		AND ab.`status` = 'TRANSED'
		AND ab.user_id = #{consumerNo}
		ORDER BY ao.`id`
	</select>

	<select id="getAfOverdueBillDtoByConsumerNo" resultType="AfOverdueBillDto">
		SELECT ab.`id` borrowId,
		abb.id billId,
		abb.borrow_no borrowNo,
		ab.gmt_create gmtBorrow,
		abb.bill_year billYear,
		abb.bill_month billMonth,
		abb.nper nper,
		abb.bill_nper billNper,
		abb.bill_amount billAmount,
		abb.status status,
		abb.remark remark,
		abb.overdue_days overdueDays,
		abb.principle_amount principleAmount,
		abb.interest_amount interestAmount,
		abb.overdue_interest_amount overdueInterestAmount,
		abb.poundage_amount poundageAmount,
		abb.overdue_poundage_amount overduePoundageAmount,
		abb.gmt_pay_time lastRepayDay	
		FROM `af_borrow` ab
		LEFT JOIN `af_borrow_bill` abb on abb.`borrow_id`= ab.`id`
		WHERE ab.`is_delete`= 0
		AND abb.`is_delete`= 0
		AND ab.`order_id` = #{orderId}
		ORDER BY abb.bill_year DESC,
		abb.bill_month DESC
	</select>

	<select id="getOverduedMonthByUserId" resultType="java.lang.Integer">
		SELECT COUNT(1) from (
			SELECT * from af_borrow_bill
			where is_delete = 0
			and overdue_status = 'Y'
			and status = 'N'
			and user_id = #{userId} GROUP BY bill_month,bill_year)a
    </select>

    <select id="getLastPayDayByUserId" resultType="java.util.Date">
		SELECT gmt_pay_time from af_borrow_bill where is_delete = 0 and is_out = 1 and status = 'N' and user_id = #{userId}  ORDER BY gmt_pay_time LIMIT 0,1
    </select>

    <select id="getUserBillMoneyByQuery" resultType="java.math.BigDecimal">
		SELECT
			COALESCE (sum(bill_amount), 0)
		FROM
			af_borrow_bill
		WHERE
			is_delete = 0
		<if test="isOut != null">
			AND is_out = #{isOut}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="overdueStatus != null and overdueStatus != ''">
			AND overdue_status = #{overdueStatus}
		</if>
		<if test="outDayStr != null and outDayStr != '' and outDayEnd != null and outDayEnd != ''">
			AND gmt_out_day <![CDATA[>=]]> #{outDayStr} 
			and gmt_out_day <![CDATA[<]]> #{outDayEnd}
		</if>
		AND user_id = #{userId}
    </select>

    <select id="getUserBillListByQuery" resultType="AfBorrowBillDo">
		SELECT
			COALESCE (sum(bill_amount), 0) billAmount,
			COALESCE (sum(overdue_interest_amount), 0) overdueInterestAmount,
			gmt_out_day gmtOutDay
		FROM
			af_borrow_bill
		WHERE
			is_delete = 0
		<if test="isOut != null">
			AND is_out = #{isOut}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="overdueStatus != null and overdueStatus != ''">
			AND overdue_status = #{overdueStatus}
		</if>
		<if test="outDayStr != null and outDayStr != '' and outDayEnd != null and outDayEnd != ''">
			AND gmt_out_day <![CDATA[>=]]> #{outDayStr} 
			and gmt_out_day <![CDATA[<]]> #{outDayEnd}
		</if>
		AND user_id = #{userId}
		GROUP BY
			gmt_out_day
		ORDER BY
			gmt_out_day
	</select>

	<select id="countBillByQuery" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		from
			af_borrow_bill
		WHERE
			is_delete = 0
		<if test="isOut != null">
			AND is_out = #{isOut}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="overdueStatus != null and overdueStatus != ''">
			AND overdue_status = #{overdueStatus}
		</if>
		<if test="outDayStr != null and outDayStr != '' and outDayEnd != null and outDayEnd != ''">
			AND gmt_out_day <![CDATA[>=]]> #{outDayStr} 
			and gmt_out_day <![CDATA[<]]> #{outDayEnd}
		</if>
		AND user_id = #{userId}
	</select>

	<select id="getBillListByQuery" resultType="AfBorrowBillDto">
		SELECT
			a.id rid,
			a.NAME name,
			a.bill_amount billAmount,
			a.bill_nper billNper,
			a.nper nper,
			c.gmt_pay payDate,
			a.gmt_out_day gmtOutDay,
			a.gmt_pay_time gmtPayTime
		FROM `af_borrow_bill` a
		LEFT JOIN `af_borrow` b on a.`borrow_id`= b.`id`
		LEFT JOIN `af_order` c on b.`order_id`= c.id
		where
			a.`is_delete`= 0
		<if test="isOut != null">
			AND a.is_out = #{isOut}
		</if>
		<if test="status != null and status != ''">
			AND a.status = #{status}
		</if>
		<if test="overdueStatus != null and overdueStatus != ''">
			AND a.overdue_status = #{overdueStatus}
		</if>
		<if test="outDayStr != null and outDayStr != '' and outDayEnd != null and outDayEnd != ''">
			AND gmt_out_day <![CDATA[>=]]> #{outDayStr} 
			and gmt_out_day <![CDATA[<]]> #{outDayEnd}
		</if>
		AND a.`user_id` = #{userId}
		ORDER BY c.`gmt_pay`
	</select>

	<select id="getUserOverdeuInterestByQuery" resultType="java.math.BigDecimal">
		SELECT
			COALESCE (sum(overdue_interest_amount), 0)
		FROM
			af_borrow_bill
		WHERE
			is_delete = 0
		AND is_out = 1
		AND status = 'N'
		AND overdue_status = 'Y'
		<if test="outDayStr != null and outDayStr != '' and outDayEnd != null and outDayEnd != ''">
			AND gmt_out_day <![CDATA[>=]]> #{outDayStr} 
			and gmt_out_day <![CDATA[<]]> #{outDayEnd}
		</if>
		AND user_id = #{userId}
	</select>

	<select id="getInterestByBorrowId" resultType="java.math.BigDecimal">
		SELECT
			COALESCE (sum(interest_amount), 0)
		FROM
			af_borrow_bill
		WHERE
			is_delete = 0
		AND borrow_id = #{borrowId}
	</select>

	<select id="getOverdueInterestByBorrowId" resultType="java.math.BigDecimal">
		SELECT
			COALESCE (sum(overdue_interest_amount), 0)
		FROM
			af_borrow_bill
		WHERE
			is_delete = 0
		AND borrow_id = #{borrowId}
	</select>

	<select id="getUserAllMonthBill" resultType="AfBorrowBillDo">
		select a.billAmount ,
			str_to_date(a.gmtOutDay,'%Y-%m-%d %H:%i:%s') gmtOutDay
		from
		(SELECT
		      COALESCE (sum(bill_amount), 0) billAmount,
		      DATE_FORMAT(gmt_out_day,'%Y-%c-01') gmtOutDay
		      -- gmt_out_day
		    FROM
		      af_borrow_bill
		    WHERE
		      is_delete = 0
		      AND status = 'Y'
		      AND user_id = #{userId}
		      and gmt_out_day <![CDATA[<]]> NOW()
		    GROUP BY
		      DATE_FORMAT(gmt_out_day,'%Y-%c')
		    ORDER BY
		      DATE_FORMAT(gmt_out_day,'%Y-%c') desc
		) a
		left join
		(SELECT
		      COALESCE (sum(bill_amount), 0) billAmount,
		      DATE_FORMAT(gmt_out_day,'%Y-%c-01') gmtOutDay
		    FROM
		      af_borrow_bill
		    WHERE
		      is_delete = 0
		      AND is_out = 1
		      AND status = 'N'
		      AND user_id = #{userId}
		      and gmt_out_day <![CDATA[<]]> NOW()
		    GROUP BY
		      DATE_FORMAT(gmt_out_day,'%Y-%c')
		    ORDER BY
		      DATE_FORMAT(gmt_out_day,'%Y-%c') desc
		) b
		on a.gmtOutDay = b.gmtOutDay
		where  IFNULL(b.billAmount,0) = 0
		ORDER BY gmtOutDay desc
		LIMIT #{begin},#{pageSize}
	</select>


	<select id="countNotPayOverdueBill" resultType="java.lang.Integer">
		SELECT COUNT(1) from af_borrow_bill where is_delete = 0 and `status` = 'N' and overdue_status = 'Y' and user_id = #{userId}
	</select>

	<select id="getNoPayBillByUserId" resultType="AfBorrowBillDo">
		SELECT <include refid="queryFields"/> from af_borrow_bill
		where user_id = #{userId} and  (status = 'N' or gmt_out_day > #{gmt_out_day}) and is_out = 0 and is_delete = 0 order by gmt_out_day asc, bill_year asc,bill_month asc;
	</select>

	<update id="updateBillOutDay">
		update af_borrow_bill set gmt_out_day = #{gmtOutDay},gmt_pay_time = #{gmtPayTime},bill_year =#{billYear},bill_month = #{billMonth} where id = #{id}
	</update>

	<select id="getBillIdsByUserId" resultType="java.lang.String">
		SELECT GROUP_CONCAT(id) billIds
		FROM af_borrow_bill
		WHERE is_delete=0  AND STATUS IN ('N')
		AND user_id = #{userId}
		AND gmt_pay_time<![CDATA[<=]]>DATE_FORMAT(NOW(),'%Y-%m-%d 23:59:59')
	</select>

	<update id="updateBorrowBillLockById" >
		UPDATE
		af_borrow_bill
		SET
		gmt_modified = NOW(),
		lockdate = NOW(),
		is_lock = 'Y'
		WHERE
		is_delete = 0
		AND id = #{billId}
		AND status = 'N'
		AND is_lock = 'N'
	</update>

	<update id="updateBorrowBillUnLockByIds" >
		UPDATE
		af_borrow_bill
		SET
		gmt_modified = NOW(),
		lockdate = NOW(),
		is_lock = 'N'
		WHERE
		is_delete = 0
		AND id IN
		<foreach collection="billIds" item="item" index="index" separator="," open="(" close=")">
			#{item}
		</foreach>

	</update>

	<select id="getPayDayByYearAndMonth" resultType="java.util.Date">
		SELECT
			gmt_pay_time
		FROM
			af_borrow_bill
		WHERE
		is_delete = 0
		AND	user_id = #{userId}
		AND DATE_FORMAT(gmt_out_day,'%Y') = #{billYear}
		AND DATE_FORMAT(gmt_out_day,'%c') = #{billMonth}
		and is_out = 1
		order by gmt_pay_time
		limit 0,1
	</select>

	<select id="selectInterimAmountByUserId" resultType="afInterimAuDo">
		SELECT
		id rid,user_id,gmt_create,gmt_modified,interim_amount,interim_used,gmt_failuretime
        from
        af_interim_au
        where user_id = #{userId}
	</select>

	<select id="getBillIdListByQuery" resultType="java.lang.Long">
		SELECT
			id
		from
			af_borrow_bill
		WHERE
			is_delete = 0
		<if test="isOut != null">
			AND is_out = #{isOut}
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<if test="overdueStatus != null and overdueStatus != ''">
			AND overdue_status = #{overdueStatus}
		</if>
		<if test="outDayStr != null and outDayStr != '' and outDayEnd != null and outDayEnd != ''">
			AND gmt_out_day <![CDATA[>=]]> #{outDayStr} 
			and gmt_out_day <![CDATA[<]]> #{outDayEnd}
		</if>
		AND user_id = #{userId}
	</select>

	<select id="getOnRepaymentCountByUserId" resultType="java.lang.Integer">
		SELECT
		COUNT(1)
		from
		af_repayment
		where `status` = 'P'AND is_delete = 0 AND user_id = #{userId}
	</select>

	<select id="getBillLeaseAmountByIds" resultType="AfBorrowBillDo">
		SELECT SUM(b.bill_amount) bill_amount,SUM(b.principle_amount) principle_amount
		FROM af_borrow_bill b
		WHERE is_delete = 0  AND status IN ('N','D')
		AND type='LEASE'
		AND id in (
		<foreach collection="ids" item="item" index="index" separator="," >
			#{item}
		</foreach>
		)
	</select>
</mapper>